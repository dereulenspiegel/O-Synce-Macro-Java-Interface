<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="O-Synce Macro Lib">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse"/>
    <property name="Macro Test.location" value="../Macro Test"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	<property name="src" value="src"/>
	<property name="test-src" value="test"/>
	<property name="test-bin" value="test-bin"/>
	<property name="report-dir" value="reports"/>
	
    <path id="O-Synce Macro Lib.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/rxtx-2.1-7-bins-r2/RXTXcomm.jar"/>
    </path>
	
	<path id="junit.classpath">
		<pathelement location="${junit.jar}"/>
		<pathelement location="bin"/>
	</path>
	
	<path id="analyze.libs">
		<fileset dir="test-libs">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
    <target name="init">
        <mkdir dir="bin"/>
    	<mkdir dir="${junit.output.dir}"/>
    	<mkdir dir="${test-bin}"/>
    	<mkdir dir="${report-dir}"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="${src}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
	
    <target name="clean">
        <delete dir="bin"/>
    	<delete dir="${junit.output.dir}"/>
    	<delete dir="${test-bin}"/>
    	<delete dir="${report-dir}"/>
    </target>
	
    <target depends="clean" name="cleanall"/>
    <target depends="build-project" name="build"/>
	
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="${src}"/>
            <classpath refid="O-Synce Macro Lib.classpath"/>
        </javac>
    </target>
	
	<target name="build-tests" depends="init,build-project">
		<javac debug="true" debuglevel="${debuglevel}" destdir="${test-bin}" source="${source}" target="${target}">
        	<src path="${test-src}"/>
        	<classpath>
        		<path refid="O-Synce Macro Lib.classpath"/>
        		<path refid="junit.classpath"/>
			</classpath>
    	</javac>
	</target>
	
    <target name="GenericPacketTestCase">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.akuz.osynce.macro.serial.packet.test.GenericPacketTestCase" todir="${junit.output.dir}"/>
            <classpath refid="O-Synce Macro Lib.classpath"/>
        </junit>
    </target>
    <target name="GenericPayloadTestCase">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.akuz.osynce.macro.serial.payload.test.GenericPayloadTestCase" todir="${junit.output.dir}"/>
            <classpath refid="O-Synce Macro Lib.classpath"/>
        </junit>
    </target>
    <target name="NumberOfTrainingsPacketTestCase">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.akuz.osynce.macro.serial.packet.test.NumberOfTrainingsPacketTestCase" todir="${junit.output.dir}"/>
            <classpath refid="O-Synce Macro Lib.classpath"/>
        </junit>
    </target>
    <target name="UtilsTestCase">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.akuz.osynce.macro.utils.test.UtilsTestCase" todir="${junit.output.dir}"/>
            <classpath refid="O-Synce Macro Lib.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
	
	<target name="unittests" depends="build-tests">
		<echo>Junit.jar location: ${junit.jar}</echo>
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="junit.classpath"/>
				<pathelement location="${test-src}"/>
				<pathelement location="${test-bin}"/>
			</classpath>
			
			<batchtest fork="yes" todir="${junit.output.dir}">
				<formatter type="xml"/>
				<fileset dir="${test-src}">
					<include name="**/*TestCase.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="pmd" depends="init">
		<echo>Setting up PMD Task</echo>
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
			<classpath refid="analyze.libs" />
		</taskdef>
		<echo>Generating PMD Report</echo>
		<pmd>
			<ruleset>basic</ruleset>
			<ruleset>unusedcode</ruleset>
			<ruleset>braces</ruleset>
			<ruleset>imports</ruleset>
			<ruleset>optimizations</ruleset>
			<ruleset>strings</ruleset>
			<formatter type="xml" toFile="${report-dir}/pmd.xml" />
			<fileset dir="${src}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
	</target>
	
	<target name="ncss" depends="init">
		<echo>Setting up Java NCSS Task</echo>
		<taskdef name="javancss" classname="javancss.JavancssAntTask">
			<classpath refid="analyze.libs"/>
		</taskdef>
		<echo>Generating NCSS report</echo>
		<javancss srcdir="${src}"
			includes="**/*.java"
			generateReport="yes"
			outputfile="${report-dir}/javancss.xml"
			format="xml"
			packageMetrics="yes"
			classMetrics="yes"
			functionMetrics="yes">
		</javancss>
	</target>
	
	<target name="cpd" depends="init">
		<echo>Setting up CPD Task</echo>
		<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" >
			<classpath refid="analyze.libs" />
		</taskdef>
		<echo>Starting CPD and generating report</echo>
		<cpd minimumTokenCount="100" outputFile="${report-dir}/cpd.xml" format="xml">
			<fileset dir="${src}">
				<include name="**/*.java"/>
			</fileset>
		</cpd>
		<echo>CPD Task finished</echo>
	</target>
	
	<target name="analyze" depends="pmd,cpd,ncss"/>
	<target name="testAndAnalyze" depends="analyze,unittests"/>
</project>
